/*
Welcome to the 60fps project! Your goal is to make Cam's Pizzeria website run
jank-free at 60 frames per second.

There are two major issues in this code that lead to sub-60fps performance. Can
you spot and fix both?


Built into the code, you'll find a few instances of the User Timing API
(window.performance), which will be console.log()ing frame rate data into the
browser console. To learn more about User Timing API, check out:
http://www.html5rocks.com/en/tutorials/webperformance/usertiming/

Creator:
Cameron Pittman, Udacity Course Developer
cameron *at* udacity *dot* com
*/
/*Creates the Web Worker*/
var workers = new Worker("js/workers.js")

/** @function createElem
  * @param {string} htmlElementName - Name of HTML element to be created
  * @return {element} htmlElement - HTML element
*/
function createElem(htmlElementName){

  var htmlElement = document.createElement(htmlElementName);
  return htmlElement
}

/*@function
 * Gets information from workers to create the elements
  that contains the pizza name and ingrtedients*/
workers.onmessage = function(e){

  var pizzaName  = createElem("h4");
  pizzaName.innerHTML = e.data.title
  var pizzaIngredients = createElem("ul");
  pizzaIngredients.innerHTML = e.data.pizza
  var pizzasDiv = document.getElementById("randomPizzas");
  pizzasDiv.appendChild(pizzaElementGenerator(pizzaName, pizzaIngredients));
}

/** @function pizzaElementGenerator
  * @param {string} pizzaname - The name of the pizza generated by the workers.
  * @param {string} pizzaingredient - The ingredients list of the pizza generated by the workers.
  * @returns {DOM element} DOM element for each pizza.
  * Called from a for loop.
*/
var pizzaElementGenerator = function(pizzaname, pizzaingredients) {
  var pizzaContainer,             // contains pizza title, image and list of ingredients
      pizzaImageContainer,        // contains the pizza image
      pizzaImage,                 // the pizza image itself
      pizzaDescriptionContainer,  // contains the pizza title and list of ingredients

  pizzaContainer = createElem("div");
  pizzaImageContainer = createElem("div");
  pizzaImage = createElem("img");
  pizzaDescriptionContainer = createElem("div");
  pizzaContainer.classList.add("randomPizzaContainer");
  pizzaContainer.style.width = "33.33%";
  pizzaContainer.style.height = "325px";
  pizzaContainer.id = "pizza" + pizzaingredients;
  pizzaImageContainer.classList.add("col-md-6");
  pizzaImage.src = "https://s3-us-west-2.amazonaws.com/vaneprojects/Project4Udacity/pizza3.png";
  pizzaImage.classList.add("img-responsive");
  pizzaImageContainer.appendChild(pizzaImage);
  pizzaContainer.appendChild(pizzaImageContainer);
  pizzaDescriptionContainer.classList.add("col-md-6");
  pizzaDescriptionContainer.appendChild(pizzaname);
  pizzaDescriptionContainer.appendChild(pizzaingredients);
  pizzaContainer.appendChild(pizzaDescriptionContainer);

  return pizzaContainer;
};

/** @function resizePizzas
  * @param {string} size- Pizza size selected by the user.
  * Called when the slider in the "Our Pizzas" section of the website moves.
*/
var resizePizzas = function(size) {
  var newwidth;
  var pizzaBoxes = document.querySelectorAll(".randomPizzaContainer");

  window.performance.mark("mark_start_resize");   // User Timing API function

  /** @function changeSliderLabel
    * @param {string} - Pizza size selected by the user.
    * @return {string} - The HTML content of pizzaSize element.
    * Changes the value for the size of the pizza above the slider.
  */
  function changeSliderLabel(size) {
    switch(size) {
      case "1":
        newwidth = 25;
        document.querySelector("#pizzaSize").innerHTML = "Small";
        console.log(document.querySelector("#pizzaSize").innerHTML)
        return;
      case "2":
      newwidth = 33;
        document.querySelector("#pizzaSize").innerHTML = "Medium";
        return;
      case "3":
      newwidth = 50;
        document.querySelector("#pizzaSize").innerHTML = "Large";
        return;
      default:
        console.log("bug in changeSliderLabel");
    }
  }

  changeSliderLabel(size);

  /**Elimination of DX function and set to % new width from Udacity course BROWSER RENDERING OPTIMIZATION
    * Answer from the Quiz: Stop FSL
  */

  for (var i = 0; i < 100; i++) {

      pizzaBoxes[i].style.width = newwidth + "%";
  }

    window.performance.mark("mark_end_resize");
    window.performance.measure("measure_pizza_resize", "mark_start_resize", "mark_end_resize");
    var timeToResize = window.performance.getEntriesByName("measure_pizza_resize");
    console.log("Time to resize pizzas: " + timeToResize[timeToResize.length-1].duration + "ms");

};

window.performance.mark("mark_start_generating"); // collect timing data

// User Timing API again. These measurements tell you how long it took to generate the initial pizzas
window.performance.mark("mark_end_generating");
window.performance.measure("measure_pizza_generation", "mark_start_generating", "mark_end_generating");
var timeToGenerate = window.performance.getEntriesByName("measure_pizza_generation");
console.log("Time to generate pizzas on load: " + timeToGenerate[0].duration + "ms");

// Iterator for number of times the pizzas in the background have scrolled.
// Used by updatePositions() to decide when to log the average time per frame
var frame = 0;

/** @function logAverageFrame
  * @param {array} times - User timing array measurements from updatePositions()
  * Logs the average amount of time per 10 frames needed to move the sliding background pizzas on scroll.
*/
function logAverageFrame(times) {
  var numberOfEntries = times.length;
  var sum = 0;
  for (var i = numberOfEntries - 1; i > numberOfEntries - 11; i--) {
    sum = sum + times[i].duration;
  }
  console.log("Average scripting time to generate last 10 frames: " + sum / 10 + "ms");
}

var cols = 8;
var s = 256;
var leftPosition = [100, 356, 612, 868, 1124, 1380, 1636, 1892];

/** Creates the img elements for each randoPizzaContainer */
for (var i = 0; i < 40; i++) {
    var elem = createElem('img');
    elem.className = 'mover';
    elem.src = "https://s3-us-west-2.amazonaws.com/vaneprojects/Project4Udacity/pizzaBackground.png";
    elem.style.height = "100px";
    elem.style.width = "73.333px";
    elem.style.left = leftPosition[i % cols]+ "px"
    elem.style.transform = "translateX("+0 +"px)"  ;
    elem.style.top = (Math.floor(i / cols) * s) + 'px';
    document.querySelector("#movingPizzas1").appendChild(elem);
}

var latestKnownScrollY = 0,
    ticking = false;
window.addEventListener('scroll', onScroll);

/** @function onScroll
 * takes the value of the last scroll and calls requestTick function
 * Called by the scroll Event Listener
*/
function onScroll (){
  latestKnownScrollY = window.scrollY;
  requestTick();
}

/** @function requestTick
 * Calls requestAnimationFrame if it hasn't being requested.
 * Assigns a true value to ticking
*/
function requestTick() {
  if(!ticking) {
    requestAnimationFrame(update);
  }
  ticking = true;
}

/** @function update
 * Change X position of the pizzas on the background
 * Assigns a false value to ticking
*/
function update() {
  ticking = false;
  frame++;
  window.performance.mark("mark_start_frame");

  var items = document.querySelectorAll('.mover');
  var itemsLength= items.length;

  for (var i = 0; i < itemsLength; i++) {
    var phase = Math.sin((latestKnownScrollY / 1250) + (i % 5));
    items[i].style.transform = "translateX("+(100 * phase)+"px)"
  }

  window.performance.mark("mark_end_frame");
  window.performance.measure("measure_frame_duration", "mark_start_frame", "mark_end_frame");

  if (frame % 10 === 0) {
    var timesToUpdatePosition = window.performance.getEntriesByName("measure_frame_duration");
    logAverageFrame(timesToUpdatePosition);
  }

}

/** Animation technique taken from Leaner, Meaner, Faster Animations with requestAnimationFrame
http://www.html5rocks.com/en/tutorials/speed/animations/
Debouncing Scroll Events
*/


